#include <iostream> //BIBLIOTECAS UTILIZADAS
#include <tchar.h>
#include <windows.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

#define  TAMDISCIPLINA 10//CONSTANTES UTILIZADAS
#define  TAMALUNOS 10
#define  TAMTURMA 50
#define TAMPKEY 30
using namespace std;

HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
COORD CursorPosition;

void gotoxy(int x, int y){
 CursorPosition.X = x; // Locates column
 CursorPosition.Y = y; // Locates Row
 SetConsoleCursorPosition(console,CursorPosition); // Sets position for next thing to be printed
}

typedef struct {
   char	nome[60];
   int carga_h, numero;
}Disciplina;

typedef struct {
   char	situacao[10], matricula_a_t[30];
   int ano, faltas, disc;
   float nota[4];
}Turma;

typedef struct {
   char	nome[60], sexo[10], matricula_a[30];
}Aluno;

Aluno alunos[TAMALUNOS];
Turma turmas [TAMTURMA];
Disciplina disciplinas[TAMDISCIPLINA];
int cont_aluno, cont_turma, cont_disciplina;


void ler_aluno_arquivo() {
    FILE *pont_arq;
    int cont = 0, i;
    pont_arq = fopen("aluno.txt", "r");
    if(pont_arq){
        while(fscanf(pont_arq ,"%s%s%s", alunos[cont].matricula_a, alunos[cont].nome, alunos[cont].sexo) != EOF) {
            for(i = 0; i <= strlen(alunos[cont].nome); i++) {
                if(alunos[cont].nome[i] == '_') {
                    alunos[cont].nome[i] = ' ';
                }
            }
            for(i = 0; i <= strlen(alunos[cont].matricula_a); i++) {
                if(alunos[cont].matricula_a[i] == '_') {
                    alunos[cont].matricula_a[i] = ' ';
                }
            }
            for(i = 0; i <= strlen(alunos[cont].sexo); i++) {
                if(alunos[cont].sexo[i] == '_') {
                    alunos[cont].sexo[i] = ' ';
                }
            }
            cont++;
            cont_aluno++;
        }
        fclose(pont_arq);
    }
    else
        printf("\nERRO ao abrir arquivo!\n");
}

void gravar_aluno_arquivo() {
    FILE *pont_arq;
    int i, pos, cont;
    pont_arq = fopen("aluno.txt", "w");
    if(pont_arq) {
        for(int pos = 0; pos < cont_aluno; pos++) {
            for(i = 0; i < strlen(alunos[pos].nome); i++) {
                if(alunos[pos].nome[i] == ' ') {
                    alunos[pos].nome[i] = '_';
                }
            }
        for(i = 0; i < strlen(alunos[pos].matricula_a); i++) {
                if(alunos[pos].matricula_a[i] == ' ') {
                    alunos[pos].matricula_a[i] = '_';
                }
            }
        for(i = 0; i < strlen(alunos[pos].sexo); i++) {
                if(alunos[pos].sexo[i] == ' ') {
                    alunos[pos].sexo[i] = '_';
                }
            }
            fprintf(pont_arq, "%s \n", alunos[pos].matricula_a);
            fprintf(pont_arq, "%s \n", alunos[pos].nome);
            fprintf(pont_arq, "%s \n", alunos[pos].sexo);
        }
        fclose(pont_arq);
    } else {
        printf("\nERRO ao abrir arquivo!\n");
    }
}

void ler_disciplina_arquivo() {
    FILE *pont_arq;
    int cont = 0, i;
    pont_arq = fopen("disciplina.txt", "r");
    if(pont_arq){
        while(fscanf(pont_arq ,"%d%s%d",&disciplinas[cont].numero, disciplinas[cont].nome, &disciplinas[cont].carga_h) != EOF) {
            for(i = 0; i <= strlen(disciplinas[cont].nome); i++) {
                if(disciplinas[cont].nome[i] == '_') {
                    disciplinas[cont].nome[i] = ' ';
                }
            }
            cont++;
            cont_disciplina++;
        }
        fclose(pont_arq);
    }
    else
        printf("\nERRO ao abrir arquivo!\n");
}

void gravar_disciplina_arquivo() {
    FILE *pont_arq;
    int i, pos, cont;
    pont_arq = fopen("disciplina.txt", "w");
    if(pont_arq) {
        for(int pos = 0; pos < cont_disciplina; pos++) {
            for(i = 0; i < strlen(disciplinas[pos].nome); i++) {
                if(disciplinas[pos].nome[i] == ' ') {
                    disciplinas[pos].nome[i] = '_';
                }
            }
            fprintf(pont_arq, "%d \n", disciplinas[pos].numero);
            fprintf(pont_arq, "%s \n", disciplinas[pos].nome);
            fprintf(pont_arq, "%d \n", disciplinas[pos].carga_h);
        }
        fclose(pont_arq);
    } else {
        printf("\nERRO ao abrir arquivo!\n");
    }
}

int pergunta(){
    int op;
     while(op != 4){
        cout<<"\n1-Aluno\n2-Disciplina\n3-Voltar\n:";
        cin >> op;
        switch(op){
            case 1:
                return op;
                break;
            case 2:
                return op;
                break;
            case 3:
                break;
                default:
                    cout<<"Opção inválida, tente novamente!\n:";
                    break;
            }
    }
}

void cadastrar_aluno(){
    cout<<"\t---CADASTRO DE ALUNO---: ";
    int sair = 0, contador;
    char pkey[TAMPKEY];
    while(sair != 1) {
        cout<<"\nMatrícula: ";
        scanf(" %[^\n]", pkey);
        for(contador = 0; contador <= cont_aluno; contador++){
            if(strcmp(alunos[contador].matricula_a, pkey)!=0){
                if(contador == cont_aluno) {
                   strcpy(alunos[contador].matricula_a, pkey);
                sair = 1;
                }
            } else {
                cout << "Matrícula já existe!";
                sair = 0;
                break;
            }
        }
    }
    cout<<"\nNome:";
    scanf(" %[^\n]",alunos[cont_aluno].nome);
    cout<<"\nSexo:";
    scanf(" %[^\n]",alunos[cont_aluno].sexo);
    cout<<"\n\tALUNO CADASTRADO!!\n";
    cont_aluno++;
}

void cadastrar_disciplina(){
    cout<<"\t---CADASTRO DE DISCIPLINA---: ";
    int sair = 0, contador;
    int compara;
    while(sair != 1) {
        cout<<"\nNúmero da Disciplina: ";
        cin>>compara;
        for(contador = 0; contador <= cont_disciplina; contador++){
                if(disciplinas[contador].numero!=compara){
                if(contador == cont_disciplina) {
                   disciplinas[contador].numero=compara;
                sair = 1;
                }
            } else {
                cout << "Número já existe!";
                sair = 0;
                break;
            }
        }
    }
    cout<<"\nCarga horária:";
    cin>>disciplinas[cont_disciplina].carga_h;
    cout<<"\nNome:";
    scanf(" %[^\n]",disciplinas[cont_disciplina].nome);
    cout<<"\n\tDISCIPLINA CADASTRADA!!\n";
    cont_disciplina++;
}

int escolher_disciplina(){
    int cont, escolha;
    cout<<"Número das disciplinas:\n";
    for(cont=0;cont<cont_disciplina;cont++){
        cout<<disciplinas[cont].numero<<" "<<disciplinas[cont].nome<<"\n";
    }
    cout<<"Escolha a disciplina correspondente:\n";
    cin>>escolha;
    return escolha;
}

void cadastrar_turma(){
    cout<<"\t---CADASTRO DE TURMA---: ";
    float soma=0;
    int sair = 0, contador;
    int compara;
    char pkey[TAMPKEY];
    while(sair != 1) {
            if(cont_aluno==0){
                cadastrar_aluno();
            }
        cout<<"\nMatrícula do aluno: ";
        scanf(" %[^\n]", pkey);
        for(contador = 0; contador <= cont_aluno; contador++){
            if(strcmp(alunos[contador].matricula_a, pkey)==0){
                   strcpy(turmas[cont_turma].matricula_a_t, pkey);
                 sair = 1;
                 break;
                }
            if(contador==cont_aluno) {
                cout << "Matrícula não existe!\n";
                sair = 0;
                break;
            }
          }
        }
        sair=0;
         if(cont_disciplina==0){
                cadastrar_disciplina();
            }
    turmas[cont_turma].disc=escolher_disciplina();
   cout<<"Ano letivo:\n";
   cin>>turmas[cont_turma].ano;
   for(contador=0;contador<3;contador++){
    printf("Nota %d :\n", contador+1);
    cin>>turmas[cont_turma].nota[contador];
   }
   for(contador=0;contador<3;contador++){
    soma=soma+turmas[cont_turma].nota[contador];
   }
   soma=soma/3;
   turmas[cont_turma].nota[3]=soma;
   if(turmas[cont_turma].nota[3]<6){
    strcpy(turmas[cont_turma].situacao, "reprovado");
   }else{
       strcpy(turmas[cont_turma].situacao, "aprovado");
   }
   cout<<"Faltas:\n";
   cin>>turmas[cont_turma].faltas;
    cout<<"\n\tTURMA CADASTRADA!!\n";
    cont_turma++;
}

int buscar_aluno(){
    int contador;
    char matricula_compara[TAMPKEY];
    cout<<"\n\tInforme a matrícula  do aluno\n: ";
                scanf(" %[^\n]",matricula_compara);
      for(contador = 0; contador < cont_aluno; contador++){
                    if(strcmp(alunos[contador].matricula_a, matricula_compara)==0){
                        system("cls");
                        return contador;
                    }
                }
}

int buscar_disciplina(){
    int contador, compara;
    char matricula_compara[TAMPKEY];
    cout<<"\n\tInforme o numero da disciplina\n: ";
    cin>>compara;
      for(contador = 0; contador < cont_aluno; contador++){
                    if(compara==disciplinas[contador].numero){
                        system("cls");
                        return contador;
                    }
                }
}


int buscar_turma(){
    int contador, compara;
    char matricula_compara[TAMPKEY];
    cout<<"\n\tInforme a matrícula  do aluno\n: ";
    scanf(" %[^\n]",matricula_compara);
    cout<<"\n\tInforme o numero da disciplina\n: ";
    cin>>compara;
      for(contador = 0; contador <=cont_turma; contador++){
            if(contador==cont_turma){
                cout<<"Não existe turma correspondente com tal aluno e discipina";

            }
             break;
            if((strcmp(turmas[contador].matricula_a_t, matricula_compara)==0) && (turmas[contador].disc==compara)){
                        system("cls");
                        return contador;
                    }
        }
}

void excluir_aluno(int pos) {
    int i;
    for(int i = pos; i <= cont_aluno; i++) {
            if(i==cont_aluno){
            strcpy(alunos[i].matricula_a,"");
            strcpy(alunos[i].nome, "");
            strcpy(alunos[i].sexo, "");
            }else{
            alunos[i]=alunos[i+1];
            }
    }
    cout << "aluno excluído com sucesso!\n";
    cont_aluno--;
}


void excluir_disciplina(int pos) {
    int i;
    for(int i = pos; i <=cont_disciplina; i++) {
            if(i==cont_disciplina){
            disciplinas[i].numero=0;
            strcpy(disciplinas[i].nome,"");
             disciplinas[i].carga_h=0;
            }else{
            disciplinas[i]=disciplinas[i+1];
            }
    }
    cout << "Disciplina excluída com sucesso!\n";
    cont_disciplina--;
}

void excluir_turma(int pos){
    int i, contador;
    for(int i = pos; i <=cont_turma; i++) {
            if(i==cont_turma){
                for(contador=0;contador<4;contador++){
                   turmas[i].nota[contador]=0;
                }
            turmas[i].disc=0;
            turmas[i].ano=0;
            turmas[i].faltas=0;
            strcpy(turmas[i].matricula_a_t,"");
            strcpy(turmas[i].situacao,"");
            }else{
            turmas[i]=turmas[i+1];
            }
    }
    cout << "Turma excluída com sucesso!";
    cont_turma--;
}



void altera_turma(int pos){
    int contador;
    float soma;
   cout<<"Ano letivo:\n";
   cin>>turmas[pos].ano;
   for(contador=0;contador<3;contador++){
    printf("Nota %d :\n", contador);
    cin>>turmas[pos].nota[contador];
   }
   for(contador=0;contador<3;contador++){
    soma=soma+turmas[pos].nota[contador];
   }
   soma=soma/3;
   turmas[pos].nota[3]=soma;
   if(turmas[pos].nota[3]<6){
    strcpy(turmas[pos].situacao, "reprovado");
   }else{
       strcpy(turmas[pos].situacao, "aprovado");
   }
   cout<<"Faltas:\n";
   cin>>turmas[pos].faltas;
   cout<<"\nTURMA RECADASTRADA!!\n";
}



void exibe_aluno(){
    int cont, cont_exibe=0;
    system("cls");
    cout<<"Lista dos alunos :";
    gotoxy(5,2);
    cout<<"---------------------------------------------------";
    gotoxy(5,3);
    cout<<"| Matrícula";
    gotoxy(25,3);
    cout<<"| Nome";
    gotoxy(45,3);
    cout<<"| Sexo";
    gotoxy(55,3);
    cout<<"|";
    gotoxy(5,4);
    cout<<"---------------------------------------------------";
         for(cont=0;cont<cont_aluno;cont++){
         gotoxy(5,5+cont_exibe);
         cout<<"| "<< alunos[cont].matricula_a;
         gotoxy(25,5+cont_exibe);
         cout<<"| "<< alunos[cont].nome;
         gotoxy(45,5+cont_exibe);
         cout<<"| "<< alunos[cont].sexo;
         gotoxy(55,5+cont_exibe);
         cout<<"|";
         cont_exibe++;
         gotoxy(5,5+cont_exibe);
         cout<<"---------------------------------------------------";
         cont_exibe++;
               }
cout<<"\n";
}

void exibe_turma(){
    int cont, cont2,cont_exibe=0, nota_exibe=50;
    system("cls");
    cout<<"Lista das turmas:";
    gotoxy(5,2);
    cout<<"----------------------------------------------------------------------------------------------------";
    gotoxy(5,3);
    cout<<"| Matrícula aluno";
    gotoxy(25,3);
    cout<<"| N° da Disciplina";
    gotoxy(45,3);
    cout<<"| Ano letivo";
    gotoxy(50,3);
    cout<<"| Nota 1";
    gotoxy(58,3);
    cout<<"| Nota 2";
    gotoxy(66,3);
    cout<<"| Nota 3";
    gotoxy(74,3);
    cout<<"| Média";
    gotoxy(82,3);
    cout<<"| Situação";
    gotoxy(93,3);
    cout<<"| Faltas";
    gotoxy(105,3);
    cout<<"|";
    gotoxy(5,4);
    cout<<"----------------------------------------------------------------------------------------------------";
               for(cont=0;cont<cont_turma;cont++){
         gotoxy(5,5+cont_exibe);
         cout<<"| "<<turmas[cont].matricula_a_t;
         gotoxy(25,5+cont_exibe);
         cout<<"| "<<turmas[cont].disc;
         gotoxy(45,5+cont_exibe);
         cout<<"| "<<turmas[cont].ano;
         nota_exibe=50;
         for(cont2=0;cont2<4;cont2++){
         gotoxy(nota_exibe,5+cont_exibe);
         printf("|%.1f",turmas[cont].nota[cont2]);
         nota_exibe=nota_exibe+8;
         }
         gotoxy(82,5+cont_exibe);
         cout<<"| "<< turmas[cont].situacao;
         gotoxy(93,5+cont_exibe);
         cout<<"| "<< turmas[cont].faltas;
         gotoxy(105,5+cont_exibe);
         cout<<"|";
         cont_exibe++;
         gotoxy(5,5+cont_exibe);
         cout<<"----------------------------------------------------------------------------------------------------";
         cont_exibe++;
               }
cout<<"\n";
}

void exibe_disciplina(){
    int cont, cont_exibe=0;
    system("cls");
    cout<<"Lista das disciplinas :";
    gotoxy(5,2);
    cout<<"--------------------------------------------------------";
    gotoxy(5,3);
    cout<<"| Nome";
    gotoxy(25,3);
    cout<<"| N° da Disciplina";
    gotoxy(45,3);
    cout<<"| Carga horária";
    gotoxy(60,3);
    cout<<"|";
    gotoxy(5,4);
    cout<<"--------------------------------------------------------";
                for(cont=0;cont<cont_disciplina;cont++){
         gotoxy(5,5+cont_exibe);
         cout<<"| "<< disciplinas[cont].nome;
         gotoxy(25,5+cont_exibe);
         cout<<"| "<< disciplinas[cont].numero;
         gotoxy(42,5+cont_exibe);
         cout<<"| "<< disciplinas[cont].carga_h;
         gotoxy(60,5+cont_exibe);
         cout<<"|";
         cont_exibe++;
         gotoxy(5,5+cont_exibe);
         cout<<"--------------------------------------------------------";
         cont_exibe++;
 }
 cout<<"\n";
}

void altera_aluno(int pos){
    cout<<"\nNome:";
    scanf(" %[^\n]",alunos[pos].nome);
    cout<<"\nSexo:";
    scanf(" %[^\n]",alunos[pos].sexo);
    cout<<"\n\tALUNO RECADASTRADO!!\n";
}

void altera_disciplina(int pos){
    cout<<"\nCarga horária:";
    cin>>disciplinas[pos].carga_h;
    cout<<"\nNome:";
    scanf(" %[^\n]",disciplinas[pos].nome);
    cout<<"\n\tDISCIPLINA RECADASTRADA!!\n";
}


void menu(){
    int opcao=1, op2;
    while(opcao != 0) {
    op2=1;
    system("cls");
    cout << "Bem vindo ao sistema!\nO que deseja fazer?\n";
    cout << "\nSair-[0]\nCadastrar [1] \nAlterar [2]\nExcluir[3]\nExibir[4]\n:";
    scanf("%d", &opcao);
        switch(opcao) {
            case 0:
             system("cls");
             cout << "Tchau";
            break;
        case 1:
            while(op2!=0){
            system("cls");
            cout<<"O que quer cadastrar?\n";
            cout<<"Sair[0]\nAluno-[1]\nDisciplina-[2]\nTurma-[3]\n:";
            cin>>op2;
             switch(op2) {
             case 0:
                 system("cls");
                 system("pause");
             break;
             case 1:
                system("cls");
                cadastrar_aluno();
                system("pause");
             break;
             case 2:
                system("cls");
                cadastrar_disciplina();
                system("pause");
             break;
             case 3:
                system("cls");
                cadastrar_turma();
                system("pause");
             break;
             default:
                system("cls");
                break;
             }
            }
            break;
        case 2:
            while(op2!=0){
                    system("cls");
            cout<<"O que quer alterar?\n";
            cout<<"Sair[0]\nAluno-[1]\nDisciplina-[2]\nTurma-[3]\n:";
            cin>>op2;
             switch(op2) {
             case 0:
                 system("cls");
                 system("pause");
             break;
             case 1:
                system("cls");
                altera_aluno(buscar_aluno());
            system("pause");
             break;
             case 2:
                system("cls");
                altera_disciplina(buscar_disciplina());
                system("pause");
             break;
             case 3:
                system("cls");
                altera_turma(buscar_turma());
                system("pause");
             default:
                system("cls");
                break;
             }
            }
            break;
        case 3:
            while(op2!=0){
            system("cls");
            cout<<"O que quer excluir?\n";
            cout<<"Sair[0]\nAluno-[1]\nDisciplina-[2]\nTurma-[3]\n:";
            cin>>op2;
             switch(op2) {
             case 0:
                 system("cls");
                 system("pause");
             break;
             case 1:
                system("cls");
                excluir_aluno(buscar_aluno());
                system("pause");
             break;
             case 2:
                system("cls");
                excluir_disciplina(buscar_disciplina());
                system("pause");
             break;
             case 3:
                system("cls");
                excluir_turma(buscar_turma());
                system("pause");
             break;
             default:
                system("cls");
                break;
             }
            }
            break;
        case 4:
        system("cls");
            while(op2!=0){
            system("cls");
            cout<<"O que quer exibir?\n";
            cout<<"Sair[0]\nAluno-[1]\nDisciplina-[2]\nTurma-[3]\n:";
            cin>>op2;
             switch(op2) {
             case 0:
                 system("cls");
                 system("pause");
             break;
             case 1:
                exibe_aluno();
                system("pause");
             break;
             case 2:
                exibe_disciplina();
                system("pause");
             break;
             case 3:
                exibe_turma();
                system("pause");
             break;
             default:
                system("cls");
                break;
             }
            }
        default:
            break;
        }
    }
}

main(){
    setlocale( LC_ALL, "portuguese" );
    ler_aluno_arquivo();
    ler_disciplina_arquivo();
    menu();
    gravar_aluno_arquivo();
    gravar_disciplina_arquivo();
}
